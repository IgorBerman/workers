apply plugin: 'java'
apply plugin: 'application'

dependencies {
    compile project.spec['spring_context']
    compile project.spec['javax_inject']
    
    compile project(':tenant-framework-api')
    compile project(':worker-framework-api')
    
    runtime project(':tenant-framework')
    runtime project(':tenant-dal')
    
    runtime project(':worker-framework')//TODO check if it can be runtime and if not - why
    runtime project(path: ':worker-framework', configuration: 'python')
    
    runtime project(':worker-framework-postgres')
    
    runtime project(':worker-test-processors')
    runtime project(path: ':worker-test-processors', configuration: 'python')
    
    
    testCompile project.spec['commons_exec'] 
}

    
mainClassName = "com.worker.cli.ConsumersMain"
applicationDefaultJvmArgs = ["-Xmx1000m", "-Duser.timezone=GMT", "-Dfile.encoding=UTF-8", "-Djava.awt.headless=true", "-Dcom.worker.logs=/var/log/workers", "-Dpid.dir=/tmp/var/run/workers", "-Dcode.dir=/u/apps/workers/current/worker-framework-main", "-Dpython.logs.cleanup=false", "-Dcom.greylog.host="]

startScripts {  
  doLast { 
    unixScript.text = unixScript.text.replace('exec "$JAVACMD"', 'export PYTHONPATH=`find -L $APP_HOME/lib -name "*python.zip" | tr \'\\n\' \':\'` && exec "$JAVACMD"')  
  }  
}

build.dependsOn 'distTar'

test {
    systemProperties['com.workers.logs'] = '/tmp'
}
